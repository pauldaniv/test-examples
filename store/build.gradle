buildscript {
  ext {
    moduleName = 'store'
    springBootVersion = '2.1.3.RELEASE'
  }
  repositories {
    jcenter()
    mavenCentral()
    gradlePluginPortal()

  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
  }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

version = '0.1-SNAPSHOT'
bootJar {
  archiveBaseName.set(moduleName)
  version = project.version
}
group = 'paul'

task unpack(type: Copy) {
  dependsOn bootJar
  from(zipTree(tasks.bootJar.outputs.files.singleFile))
  into("build/dependency")
}

docker {
  name "${project.group}/${bootJar.archiveBaseName.getOrElse(moduleName)}:${project.version}"
  copySpec.from(tasks.unpack.outputs).into("dependency")
  buildArgs(['DEPENDENCY': "dependency"])
}

repositories {
  mavenCentral()
  maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
  implementation(
          'org.springframework.boot:spring-boot-starter-web',
          'org.codehaus.groovy:groovy',
          'org.springframework.cloud:spring-cloud-starter-config',
          'org.springframework.cloud:spring-cloud-starter',
          'org.springframework.cloud:spring-cloud-starter-openfeign:2.1.0.RELEASE',
          project(':common'),
          'org.springframework.boot:spring-boot-starter-data-jpa'
  )

  runtimeOnly 'com.h2database:h2'
  testImplementation(
          'org.springframework.boot:spring-boot-starter-test',
          'com.tngtech.java:junit-dataprovider:1.13.1'
  )
}

ext {
  set('springCloudVersion', 'Greenwich.RELEASE')
}


dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
  }
}

test {
  useTestNG()
}
