buildscript {
  ext { springBootVersion = '2.3.0.RELEASE' }
  repositories { mavenCentral() }
  dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
//apply plugin: 'signing'
apply plugin: 'java-library'

version = '0.0.1-SNAPSHOT'
group = 'com.paul.test-examples'

jar {
  archiveBaseName = 'common'
  archiveVersion = '0.0.1-SNAPSHOT'
}

publishing {
  repositories {
    mavenLocal();
//    maven {
//      name = "GitHubPackages"
//      // change URLs to point to your repos, e.g. http://my.org/repo
//      // def releasesRepoUrl = "$buildDir/repos/releases"
//      // def snapshotsRepoUrl = "$buildDir/repos/snapshots"
//      // url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//
//      url = uri("https://maven.pkg.github.com/pauldaniv/test-examples")
//      credentials {
//        username = project.findProperty("gpr.usr") ?: System.getenv("USERNAME")
//        password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
//      }
//    }
  }

  publications {
      gpr(MavenPublication) {
//        artifactId = "common"
//
//        from(components.java)
//      }

    //mavenJava(MavenPublication) {
//      from components.java
//      versionMapping {
//        usage('java-api') {
//          fromResolutionOf('runtimeClasspath')
//        }
//        usage('java-runtime') {
//          fromResolutionResult()
//        }
//      }
      pom {
        name = 'Test-Examples common library'
        description = 'Just a test changed library between different services'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'pauldaniv'
            name = 'Paul Daniv'
            email = 'pauldaniv@github.com'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/pauludaniv/test-examples.git'
          developerConnection = 'scm:git:ssh://github.com/pauludaniv/test-examples.git'
          url = 'maybe one day'
        }
      }
    }
  }
}


//signing {
//  sign publishing.publications.mavenJava
//}


javadoc {
  if (JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5', true)
  }
}

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
  implementation(
      'org.codehaus.groovy:groovy:3.0.0-alpha-4',
      'org.springframework.boot:spring-boot-starter-data-jpa',
      'org.modelmapper:modelmapper:2.3.2',
      'com.fasterxml.jackson.datatype:jackson-datatype-jsr310',
      'io.springfox:springfox-swagger2:2.9.2',
      'io.springfox:springfox-swagger-ui:2.9.2',
      "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
  )

  compileOnly 'org.springframework.cloud:spring-cloud-starter-openfeign:2.1.0.RELEASE'

  runtimeOnly 'com.h2database:h2'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//dependencyManagement {
//  imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
//}
