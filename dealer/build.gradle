buildscript {
  ext {
    moduleName = 'dealer'
    springBootVersion = '2.1.3.RELEASE'
  }
  repositories {
    jcenter()
    mavenCentral()
    gradlePluginPortal()

  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
  }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

version = '0.1-SNAPSHOT'
bootJar {
  archiveBaseName.set(moduleName)
  version = project.version
}

bootRun {
  jvmArgs = ["-Dspring.output.ansi.enabled=ALWAYS"]
}
group = 'paul'

task unpack(type: Copy) {
  dependsOn bootJar
  from(zipTree(tasks.bootJar.outputs.files.singleFile))
  into("build/dependency")
}

docker {
  name "${project.group}/${bootJar.archiveBaseName.getOrElse(moduleName)}:${project.version}"
  copySpec.from(tasks.unpack.outputs).into("dependency")
  buildArgs(['DEPENDENCY': "dependency"])
}

repositories { mavenCentral() }

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator',
          'org.springframework.boot:spring-boot-starter-web',
          project(':common'),
          'org.codehaus.groovy:groovy:3.0.0-alpha-4',
//          'org.modelmapper:modelmapper:2.3.2',
          'org.springframework.boot:spring-boot-starter-data-jpa'

  runtimeOnly 'com.h2database:h2'

  testCompile 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
  }
}
