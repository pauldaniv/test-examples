name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - develop

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: spark-app
  ORG_GRADLE_PROJECT_DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
  TOKEN: ${{ secrets.TOKEN }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache gradle dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-gradle
        with:
          # gradle cache files are stored in `~/.gradle` on Linux/macOS
          path: ~/.gradle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run tests
        run: ./gradlew test
      - name: Publish artifacts
        run: ./gradlew publish

      # PUSH TO GITHUB
      - name: Setup GitHub variables
        run: echo "TARGET_REGISTRY=GITHUB" >> $GITHUB_ENV
      - name: Log into GitHub registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}"\
            | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push image to GitHub
        run: ./gradlew :service:dockerPushImage
